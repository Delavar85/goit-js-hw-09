{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,UAAWF,SAASC,cAAc,uBAClCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,yBAGjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAACJ,E,MAAUC,MAEpBA,MAVNQ,QAAQC,IAAIlB,EAAKI,UAAUe,MAAMnB,EAAKK,UAAUL,EAAKM,QAerDN,EAAKC,KAAKmB,iBAAiB,UAAWC,IACpCA,EAAEC,iBACFL,QAAQC,MACR,IAAIK,EAAOC,OAAOxB,EAAKI,UAAUe,OACjC,IAAK,IAAIM,EAAI,EAAGA,GAAKD,OAAOxB,EAAKM,OAAOa,OAAQM,IAC9ClB,EAAckB,EAAEF,GACjBG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBQ,QAAQC,IAAI,uBAAqBV,QAAiBC,UAEnDkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBQ,QAAQC,IAAI,sBAAoBV,QAAeC,UAE/Cc,GAAQC,OAAOxB,EAAKK,UAAUc,OAEhCE,EAAEO,cAAcC","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('form'),\n  firstStep: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]')\n};\nconsole.log(refs.firstStep.value,refs.delayStep,refs.amount)\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({position, delay});\n      }\n    },delay)\n  }\n )\n}\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault()\n  console.log();\n  let time = Number(refs.firstStep.value);\n  for (let i = 1; i <= Number(refs.amount.value); i++){\n    createPromise(i,time)\n  .then(({ position, delay } ) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    time += Number(refs.delayStep.value);\n  }\n  e.currentTarget.reset()\n})\n\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","firstStep","delayStep","amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","value","addEventListener","e","preventDefault","time","Number","i","then","catch","currentTarget","reset"],"version":3,"file":"03-promises.18230218.js.map"}